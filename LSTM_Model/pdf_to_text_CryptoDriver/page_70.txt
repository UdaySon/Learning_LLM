

Crypto_RandomSeed shall report CRYPTO_E_PARAM_POINTER to the DET and
return E_NOT_OK.
()
[SWS_Crypto_00131] ⌈ If seedLength is zero and if development error detection
for the Crypto Driver is enabled, the function Crypto_RandomSeed shall report
CRYPTO_E_PARAM_VALUE to the DET and return E_NOT_OK.
()
If no errors are detected by Crypto Driver, the service Crypto_RandomSeed()
feeds the given key with a seed state derived from the entropy source. The internal
state of the random generator is stored in the key element
CRYPTO_KE_RANDOM_SEED.
8.3.4.5.2 Crypto_KeyGenerate
[SWS_Crypto_91007]⌈
Service Name Crypto_KeyGenerate
Std_ReturnType Crypto_KeyGenerate (
Syntax uint32 cryptoKeyId
)
Service ID
0x07
[hex]
Sync/Async Synchronous
Reentrancy Reentrant but not for the same cryptoKeyId
Holds the identifier of the key which is to be updated with the
Parameters (in) cryptoKeyId
generated value.
Parameters
None
(inout)
Parameters
None
(out)
E_OK: Request successful
E_NOT_OK: Request failed
CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy
Std_Return-
Return value CRYPTO_E_KEY_EMPTY: Request failed because of uninitialized
Type
source key element
CRYPTO_E_KEY_NOT_VALID: Request failed, the key state of
the key identified by cryIfKeyId is "invalid".
Description Generates new key material store it in the key identified by cryptoKeyId.
Available via Crypto.h
()
[SWS_Crypto_00094] ⌈ If the module is not yet initialized and if development error
detection for the Crypto Driver is enabled, the function Crypto_KeyGenerate shall
report CRYPTO_E_UNINIT to the DET and return E_NOT_OK.
70 of 125 Document ID 807: AUTOSAR_SWS_CryptoDriver