

()
[SWS_Crypto_00095] ⌈ If the parameter cryptoKeyId is out of range and if
development error detection for the Crypto Driver is enabled, the function
Crypto_KeyGenerate shall report CRYPTO_E_PARAM_HANDLE to the DET and
return E_NOT_OK.
()
[SWS_Crypto_00165] ⌈ If no errors are detected by Crypto Driver, the service
Crypto_KeyGenerate() generates the corresponding key.
()
8.3.4.6 Key Derivation Interface
8.3.4.6.1 Crypto_KeyDerive
[SWS_Crypto_91008]⌈
Service
Crypto_KeyDerive
Name
Std_ReturnType Crypto_KeyDerive (
uint32 cryptoKeyId,
Syntax
uint32 targetCryptoKeyId
)
Service ID
0x08
[hex]
Sync/Async Synchronous
Reentrancy Reentrant but not for the same cryptoKeyId
cryptoKeyId Holds the identifier of the key which is used for key derivation.
Parameters
(in) targetCryptoKey Holds the identifier of the key which is used to store the derived
Id key.
Parameters
None
(inout)
Parameters
None
(out)
E_OK: Request successful
E_NOT_OK: Request failed
CRYPTO_E_BUSY: Request failed, Crypto Driver Object is busy
Std_Return-
Return value CRYPTO_E_KEY_EMPTY: Request failed because of
Type
uninitialized source key element
CRYPTO_E_KEY_NOT_VALID: Request failed, the key state of
the key identified by cryIfKeyId is "invalid".
Derives a new key by using the key elements in the given key identified by the crypto
KeyId. The given key contains the key elements for the password, salt. The derived
Description key is stored in the key element with the id 1 of the key identified by targetCryptoKey
Id. The number of iterations is given in the key element CRYPTO_KE_
KEYDERIVATION_ITERATIONS.
71 of 125 Document ID 807: AUTOSAR_SWS_CryptoDriver